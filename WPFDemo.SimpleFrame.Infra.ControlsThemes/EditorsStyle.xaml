<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFDemo.SimpleFrame.Infra.ControlsThemes"
                    xmlns:EMCInput="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.Input;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:attach="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCRadioButton="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.RadioButton;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCCheckBox="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.CheckBox;assembly=WPFDemo.SimpleFrame.Infra.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFDemo.SimpleFrame.Infra.ControlsThemes;component/ScrollViewerStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="ErrorTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <AdornedElementPlaceholder x:Name="adorner"/>
            <Path Grid.Column="1"
                  Stroke="{StaticResource ErrorTemplateBackground}" 
                  Fill="{StaticResource ErrorTemplateBackground}" 
                  StrokeThickness="1" 
                  Data="M0,5 10,0 10,10Z" 
                  VerticalAlignment="Center" 
                  HorizontalAlignment="Right"/>
            <Border Grid.Column="2" 
                    Background="{StaticResource ErrorTemplateBackground}"
                    VerticalAlignment="Center"
                    Padding="5">
                <TextBlock VerticalAlignment="Center" 
                           HorizontalAlignment="Center"
                           Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}"
                           Foreground="White"/>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style TargetType="EMCInput:EMCInput">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCInput:EMCInput">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          Grid.Column="0"
                                          IsTabStop="False"
                                          Margin="2"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"/>
                            <TextBlock x:Name="PART_Watermark"
                                       Padding="{TemplateBinding Padding}"
                                       Visibility="Collapsed"
                                       Text="{TemplateBinding attach:EditorsAttachProperty.Watermark}"
                                       Grid.Column="0"
                                       Foreground="{StaticResource TextBoxWatermarkForeground}"
                                       IsHitTestVisible="False"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="5,2"/>
                            <Border x:Name="PART_AttachContent"
                                    Grid.Column="1"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                <ContentControl VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Template="{TemplateBinding attach:EditorsAttachProperty.AttachContent}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Root" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ItemsPanelTemplate x:Key="HorizontalItemsPanel">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="VerticalItemsPanel">
        <StackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>

    <Style x:Key="RadioButtonBaseStyle" TargetType="RadioButton">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" 
                                    Width="16" 
                                    Height="16" 
                                    CornerRadius="7" 
                                    BorderBrush="{StaticResource RadioButtonBorderBrush}" 
                                    BorderThickness="1" 
                                    Background="{TemplateBinding Background}" x:Name="Border">
                            <Ellipse x:Name="checkedEll" Width="8" Height="8" 
                                         Fill="{StaticResource RadioButtonFillBrush}" 
                                         Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" x:Name="Cp" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkedEll" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="checkedEll" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButtonGroupItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0,10,10,10">
                        <Grid>
                            <RadioButton HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Center"
                                         Style="{Binding RelativeSource={RelativeSource AncestorType=EMCRadioButton:RadioButtonGroup}, Path=RadioButtonStyle}"
                                         IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=EMCRadioButton:RadioButtonGroup}, Path=Command}"
                                         CommandParameter="{Binding}">
                                <ContentPresenter/>
                            </RadioButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="EMCRadioButton:RadioButtonGroup">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultRadioButtonGroupItem}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="RadioButtonStyle" Value="{StaticResource RadioButtonBaseStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCRadioButton:RadioButtonGroup">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="ItemsPanel" Value="{StaticResource HorizontalItemsPanel}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel" Value="{StaticResource VerticalItemsPanel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="15" Height="15" 
                                    Name="checkedBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1" 
                                    Background="{TemplateBinding Background}">
                            <Grid>
                                <Path x:Name="checkedPath" Stroke="White" StrokeThickness="2" 
                                          Panel.ZIndex="2" 
                                          Visibility="Collapsed" Data="M2,5 L4,8 9,2"/>
                                <Rectangle x:Name="nullRec" Width="15" Height="15" Panel.ZIndex="-1"
                                                Fill="#21adff" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="nullRec" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkedPath" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkedBorder" Property="BorderBrush" Value="#21adff"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="checkedBorder" Property="BorderBrush" Value="#c5cdd9"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultCheckBoxGroupItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0,10,10,10">
                        <Grid>
                            <CheckBox HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Style="{Binding RelativeSource={RelativeSource AncestorType=EMCCheckBox:CheckBoxGroup}, Path=CheckBoxStyle}"
                                      IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=EMCCheckBox:CheckBoxGroup}, Path=Command}"
                                      CommandParameter="{Binding}">
                                <ContentPresenter/>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="EMCCheckBox:CheckBoxGroup">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultCheckBoxGroupItem}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxBaseStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCCheckBox:CheckBoxGroup">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="ItemsPanel" Value="{StaticResource HorizontalItemsPanel}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel" Value="{StaticResource VerticalItemsPanel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ComboToggleButton">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                            x:Name="Bg"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Path Stroke="{TemplateBinding Foreground}"
                              Fill="{TemplateBinding Foreground}"
                              StrokeThickness="1"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Data="M0,5 10,5 5,0Z"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Orange" />
                            <Setter Property="Background" TargetName="Bg" Value="#9EBBDF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="DarkOrange" />
                            <Setter Property="Background" TargetName="Bg" Value="#9EBBDF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="DarkOrange" />
                            <Setter Property="Background" TargetName="Bg" Value="#9EBBDF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ComboButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            x:Name="Bg"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="#9EBBDF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="#9EBBDF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--下拉条目样式-->
    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" 
                          Margin="0,0.5">
                        <Border x:Name="ItemBackground" 
                                IsHitTestVisible="False" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="#638EC9" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="#9EBBDF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type attach:ClickComboBox}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="77" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#D8E7F5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#638EC9" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type attach:ClickComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="21" />
                                </Grid.ColumnDefinitions>
                                <!--主内容区域-->
                                <Button x:Name="PART_SelectedItem"
                                        Background="{TemplateBinding Background}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Style="{StaticResource ComboButton}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                        HorizontalAlignment="Stretch"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}"/>
                                <StackPanel Orientation="Horizontal"
                                            Grid.Column="1">
                                    <Border Width="1"
                                            BorderThickness="1" 
                                            BorderBrush="#638EC9"
                                            Margin="0,3"/>
                                    <Border Width="1"
                                            BorderThickness="1" 
                                            BorderBrush="White"
                                            Margin="0,3"/>
                                </StackPanel>
                                <ToggleButton x:Name="PART_DropDownToggle"
                                              IsTabStop="False"
                                              Grid.Column="2"
                                              Foreground="{TemplateBinding Foreground}"
                                              Style="{StaticResource ComboToggleButton}" 
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Background="{TemplateBinding Background}"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Top">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto" 
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="#D8E7F5">
                                    <ScrollViewer x:Name="DropDownScrollViewer" 
                                              BorderThickness="0">
                                        <ItemsPresenter x:Name="ItemsPresenter" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectionBoxItem" Value="全部">
                            <Setter TargetName="PART_SelectedItem" Property="Content" Value="{Binding RelativeSource={RelativeSource AncestorType=attach:ClickComboBox}, Path=CategoryName}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#9EBBDF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClickComboBoxRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBox_ToggleBtnStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#5C8EC1" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                              Margin="0,0,5,0"
                              Data="M0,0 6,5 12,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckItemStyle" TargetType="{x:Type ListBoxItem}" >
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    Margin="5,0,0,0">
                            <CheckBox IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}">
                                <ContentPresenter Margin="{TemplateBinding Padding}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </CheckBox>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#9EBBDF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MultiComboBox_SelectedAllBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#5C8EC1" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#9EBBDF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="attach:MultiComboBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#5C8EC1" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Watermark" Value="请选择"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="SelectAllBtnVisiblity" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="attach:MultiComboBox">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Text}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="21"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="PART_DropDownToggle" 
                                              Panel.ZIndex="1" 
                                              Grid.Column="0"
                                              Grid.ColumnSpan="2"
                                              IsTabStop="False" 
                                              Style="{StaticResource ComboBox_ToggleBtnStyle}" 
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <!--文本-->
                                <TextBlock x:Name="PART_Text"
                                           Text="{TemplateBinding Text}"
                                           TextTrimming="CharacterEllipsis"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Grid.Column="0"
                                           Margin="{TemplateBinding Padding}"/>
                                <!--水印-->
                                <TextBlock x:Name="PART_Watermark"
                                           Text="{TemplateBinding Watermark}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Grid.Column="0"
                                           Visibility="Collapsed"
                                           IsHitTestVisible="False"
                                           Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <!--弹出多选列表-->
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               StaysOpen="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" 
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        HorizontalAlignment="Stretch"
                                        Height="Auto" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                                    <StackPanel>
                                        <Button x:Name="PART_SelectAllBtn"
                                                Style="{StaticResource MultiComboBox_SelectedAllBtnStyle}"
                                                Visibility="{TemplateBinding SelectAllBtnVisiblity}"
                                                Width="{Binding ElementName=PART_ListBox, Path=ActualWidth}"
                                                Content="全选"/>
                                        <ListBox x:Name="PART_ListBox"
                                                 BorderThickness="0"
                                                 SelectionMode="Multiple" 
                                                 ItemsSource="{Binding ItemsSource,RelativeSource={RelativeSource TemplatedParent}}"
                                                 DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                                 ItemContainerStyle="{StaticResource CheckItemStyle}"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="attach:NewOrderCheckBox" BasedOn="{StaticResource ResourceKey={x:Type CheckBox}}"/>
    <Style TargetType="attach:CheckMultiComboBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectAllBtnVisiblity" Value="Visible"/>
        <Setter Property="Watermark" Value="请选择"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="attach:CheckMultiComboBox">
                    <WrapPanel x:Name="PART_Root">
                        <attach:NewOrderCheckBox x:Name="PART_CheckBox"
                                                 IsChecked="{Binding ElementName=PART_MultiComboBox, Path=IsCheckedAll}"/>
                        <attach:MultiComboBox x:Name="PART_MultiComboBox"
                                              InitSelectedItems="{TemplateBinding InitSelectedItems}"
                                              SelectionChangedCommand="{TemplateBinding SelectionChangedCommand}"
                                              SelectAllBtnVisiblity="{TemplateBinding SelectAllBtnVisiblity}"
                                              Watermark="{TemplateBinding Watermark}"
                                              DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                              ItemsSource="{TemplateBinding ItemsSource}"/> 
                    </WrapPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>