<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFDemo.SimpleFrame.Infra.ControlsThemes"
                    xmlns:EMCInput="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.Input;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:attach="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCRadioButton="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.RadioButton;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCCheckBox="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Editors.CheckBox;assembly=WPFDemo.SimpleFrame.Infra.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFDemo.SimpleFrame.Infra.ControlsThemes;component/ScrollViewerStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="EMCInput:EMCInput">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCInput:EMCInput">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Effect="{x:Null}"/>
                        <Grid Effect="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          Grid.Column="0"
                                          IsTabStop="False"
                                          Margin="2"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                           Effect="{x:Null}"/>
                            <TextBlock x:Name="PART_Watermark"
                                       Padding="{TemplateBinding Padding}"
                                       Visibility="Collapsed"
                                       Text="{TemplateBinding attach:EditorsAttachProperty.Watermark}"
                                       Grid.Column="0"
                                       Foreground="{StaticResource TextBoxWatermarkForeground}"
                                       IsHitTestVisible="False"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="5,2"
                                       Effect="{x:Null}"/>
                            <Border x:Name="PART_AttachContent"
                                    Grid.Column="1"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Effect="{x:Null}">
                                <ContentControl VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Template="{TemplateBinding attach:EditorsAttachProperty.AttachContent}"
                                                Effect="{x:Null}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}"/>
                            <Setter Property="Effect" TargetName="PART_Root" Value="{StaticResource DefaultDropShadowEffect}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Root" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ItemsPanelTemplate x:Key="HorizontalItemsPanel">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="VerticalItemsPanel">
        <StackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>

    <Style x:Key="RadioButtonBaseStyle" TargetType="RadioButton">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" 
                                    Width="16" 
                                    Height="16" 
                                    CornerRadius="7" 
                                    BorderBrush="{StaticResource RadioButtonBorderBrush}" 
                                    BorderThickness="1" 
                                    Background="{TemplateBinding Background}" x:Name="Border">
                            <Ellipse x:Name="checkedEll" Width="8" Height="8" 
                                         Fill="{StaticResource RadioButtonFillBrush}" 
                                         Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" x:Name="Cp" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkedEll" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="checkedEll" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButtonGroupItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0,10,10,10">
                        <Grid>
                            <RadioButton HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Center"
                                         Style="{Binding RelativeSource={RelativeSource AncestorType=EMCRadioButton:RadioButtonGroup}, Path=RadioButtonStyle}"
                                         IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                         Command="{Binding RelativeSource={RelativeSource AncestorType=EMCRadioButton:RadioButtonGroup}, Path=Command}"
                                         CommandParameter="{Binding}">
                                <ContentPresenter/>
                            </RadioButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="EMCRadioButton:RadioButtonGroup">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultRadioButtonGroupItem}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="RadioButtonStyle" Value="{StaticResource RadioButtonBaseStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCRadioButton:RadioButtonGroup">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="ItemsPanel" Value="{StaticResource HorizontalItemsPanel}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel" Value="{StaticResource VerticalItemsPanel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="15" Height="15" 
                                    Name="checkedBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1" 
                                    Background="{TemplateBinding Background}">
                            <Grid>
                                <Path x:Name="checkedPath" Stroke="White" StrokeThickness="2" 
                                          Panel.ZIndex="2" 
                                          Visibility="Collapsed" Data="M2,5 L4,8 9,2"/>
                                <Rectangle x:Name="nullRec" Width="15" Height="15" Panel.ZIndex="-1"
                                                Fill="#21adff" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="nullRec" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkedPath" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkedBorder" Property="BorderBrush" Value="#21adff"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="checkedBorder" Property="BorderBrush" Value="#c5cdd9"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultCheckBoxGroupItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0,10,10,10">
                        <Grid>
                            <CheckBox HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      Style="{Binding RelativeSource={RelativeSource AncestorType=EMCCheckBox:CheckBoxGroup}, Path=CheckBoxStyle}"
                                      IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=EMCCheckBox:CheckBoxGroup}, Path=Command}"
                                      CommandParameter="{Binding}">
                                <ContentPresenter/>
                            </CheckBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="EMCCheckBox:CheckBoxGroup">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultCheckBoxGroupItem}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxBaseStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCCheckBox:CheckBoxGroup">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="ItemsPanel" Value="{StaticResource HorizontalItemsPanel}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel" Value="{StaticResource VerticalItemsPanel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>