<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFDemo.SimpleFrame.Infra.ControlsThemes"
                    xmlns:EMCButton="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Navis.Button;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCMenu="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Navis.Menu;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCContextMenu="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Navis.ContextMenu;assembly=WPFDemo.SimpleFrame.Infra.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFDemo.SimpleFrame.Infra.ControlsThemes;component/Fonts/FontStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--#region Button -->
    <Style TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="{StaticResource BtnConfirmBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="确定"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource BtnConfirmMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BtnConfirmIsEnabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource BtnConfirmIsEnabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Urgent" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#F55860"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="加急"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#f98a91"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Buy" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#ffb31a"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="购买"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#ffca61"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Save" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#4bd4bf"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="保存"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#81e1d3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Cancel" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#c5cdd9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="取消"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#22aefd"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Back" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#39434d"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="BACK"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#777c82"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn_Search" TargetType="EMCButton:EMCButton">
        <Setter Property="Background" Value="#39434d"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="BACK"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCButton:EMCButton">
                    <Grid>

                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#777c82"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#f6f5fa"/>
                            <Setter Property="Foreground" Value="#d5d6db"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="MenuItemStyle" TargetType="EMCMenu:EMCMenuItem">
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ContextMenuItemBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ContextMenuItemForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource ContextMenuFontSize}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Header" Value="{Binding Name}"/>
        <Setter Property="Icon" Value="{Binding Icon}"/>
        <Setter Property="InputGestureText" Value="{Binding InputGestureText}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=EMCMenu:EMCMenu}, Path=ItemCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="MouseOverCommand" Value="{Binding RelativeSource={RelativeSource AncestorType=EMCMenu:EMCMenu}, Path=ItemMouseOverCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCMenu:EMCMenuItem">
                    <Border x:Name="border"
                            Background="Transparent"
                            Height="{TemplateBinding Height}">
                        <Grid VerticalAlignment="Center"
                              Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="arrow_col" Width="16" SharedSizeGroup="MenuItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--icon-->
                            <Image x:Name="PART_Icon" 
                                   Margin="5,1,1,1"
                                   Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon}"
                                   Stretch="Uniform"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                            <!--header-->
                            <ContentPresenter Grid.Column="1"
                                              x:Name="txtHeader"
                                              Margin="3,1,5,1"
                                              MinWidth="90"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"/>
                            <!--快捷键-->
                            <TextBlock Grid.Column="2"
                                       Margin="3,1"
                                       x:Name="IGTHost"
                                       Text="{TemplateBinding InputGestureText}"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Visibility="Visible"
                                       Foreground="{TemplateBinding Foreground}"/>
                            <!--右指针-->
                            <TextBlock x:Name="PART_Arrow"
                                       Grid.Column="3"
                                       Text="{StaticResource fa-angle-right}"
                                       Style="{StaticResource FIcon}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"/>
                            <!--淡出子集菜单容器-->
                            <Popup x:Name="SubMenuPopup"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=border}"
                                   Focusable="True"
                                   VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{TemplateBinding Background}"
                                        Margin="5"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu"
                                          Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0"
                                                    IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--最顶级头部（最顶级，有子项）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="txtHeader" Property="MinWidth" Value="10"/>
                            <Setter TargetName="arrow_col" Property="Width" Value="0"/>
                        </Trigger>
                        <!--最顶级子项（最顶级，无子项）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="txtHeader" Property="MinWidth" Value="10"/>
                            <Setter TargetName="arrow_col" Property="Width" Value="0"/>
                        </Trigger>
                        <!--子项头部 (子项的子项，有子项)-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Right"/>
                        </Trigger>
                        <!--子项的子项 (子项的子项，无子项)-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ContextMenuItemMouseOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultMenu" TargetType="EMCMenu:EMCMenu">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MenuItemStyle}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuItemBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCMenu:EMCMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ContextMenuItemStyleBase" TargetType="{x:Type EMCMenu:EMCMenuItem}">
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ContextMenuItemBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ContextMenuItemForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource ContextMenuFontSize}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,4"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type EMCContextMenu:EMCContextMenu}}, Path=ItemCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="MouseOverCommand" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type EMCContextMenu:EMCContextMenu}}, Path=ItemMouseOverCommand}"/>
        <Setter Property="RootContextMenu" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type EMCContextMenu:EMCContextMenu}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type EMCMenu:EMCMenuItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="border"
                                Background="Transparent">
                            <Grid VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="arrow_col" Width="16" SharedSizeGroup="MenuItemArrow"/>
                                </Grid.ColumnDefinitions>
                                <!--icon-->
                                <Image x:Name="PART_Icon" 
                                       Margin="5,1,1,1"
                                       Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon}"
                                       Stretch="Uniform"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                                <!--header-->
                                <ContentPresenter Grid.Column="1"
                                                  x:Name="txtHeader"
                                                  Margin="3,1,5,1"
                                                  MinWidth="90"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"/>
                                <!--快捷键-->
                                <TextBlock Grid.Column="2"
                                           Margin="3,1"
                                           x:Name="IGTHost"
                                           Text="{TemplateBinding InputGestureText}"
                                           FontSize="{TemplateBinding FontSize}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Visibility="Visible"
                                           Foreground="{TemplateBinding Foreground}"/>
                                <!--右指针-->
                                <TextBlock x:Name="PART_Arrow"
                                           Grid.Column="3"
                                           Text="{StaticResource fa-angle-right}"
                                           Style="{StaticResource FIcon}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"/>
                                <!--淡出子集菜单容器-->
                                <Popup x:Name="SubMenuPopup"
                                       AllowsTransparency="True"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=border}"
                                       Focusable="True"                                   
                                       VerticalOffset="0"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border Background="{TemplateBinding Background}"
                                            Margin="5"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid x:Name="SubMenu"
                                              Grid.IsSharedSizeScope="True">
                                            <StackPanel Margin="0"
                                                        IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <Separator Grid.Row="1"
                                   x:Name="PART_Separator"
                                   Foreground="{StaticResource ContextMenuItemBorderBrush}"
                                   Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--最顶级头部（最顶级，有子项）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="txtHeader" Property="MinWidth" Value="10"/>
                            <Setter TargetName="arrow_col" Property="Width" Value="0"/>
                        </Trigger>
                        <!--最顶级子项（最顶级，无子项）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="txtHeader" Property="MinWidth" Value="10"/>
                            <Setter TargetName="arrow_col" Property="Width" Value="0"/>
                        </Trigger>
                        <!--子项头部 (子项的子项，有子项)-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Right"/>
                        </Trigger>
                        <!--子项的子项 (子项的子项，无子项)-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter TargetName="PART_Arrow" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="{StaticResource DisableOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ContextMenuItemMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsGroupEnd" Value="True">
                            <Setter TargetName="PART_Separator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContextMenuItemStyle" TargetType="{x:Type EMCMenu:EMCMenuItem}" BasedOn="{StaticResource ContextMenuItemStyleBase}">
        <Setter Property="Header" Value="{Binding Name}"/>
        <Setter Property="Icon" Value="{Binding Icon}"/>
        <Setter Property="InputGestureText" Value="{Binding InputGestureText}"/>
        <Setter Property="GroupName" Value="{Binding GroupName}"/>
    </Style>
    <!--默认右键菜单ContextMenu样式-->
    <Style TargetType="{x:Type EMCContextMenu:EMCContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuItemBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContextMenuItemBackground}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ContextMenuItemForeground}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ContextMenuItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type EMCContextMenu:EMCContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>