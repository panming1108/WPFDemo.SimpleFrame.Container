<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFDemo.SimpleFrame.Infra.ControlsThemes"
                    xmlns:EMCDialog="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.UXs.Dialog;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCBusyIndicator="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.UXs.BusyIndicator;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCButton="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.Navis.Button;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCToolTip="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.UXs.ToolTip;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCNotifyBox="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.UXs.DesktopAlert;assembly=WPFDemo.SimpleFrame.Infra.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFDemo.SimpleFrame.Infra.ControlsThemes;component/NavisStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseDialogStyle" TargetType="EMCDialog:DialogBase">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="{StaticResource MaskBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCDialog:DialogBase">
                    <Grid Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </AdornerDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConfirmDialogStyle" TargetType="EMCDialog:ConfirmDialog" BasedOn="{StaticResource BaseDialogStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Border Background="White"
                        CornerRadius="5"
                        Height="250"
                        Width="500">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition/>
                            <RowDefinition Height="70"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource FIcon}"
                                           Text="{StaticResource fa-check}"
                                           Margin="10,0"
                                           Foreground="{StaticResource BtnConfirmBackground}"/>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=EMCDialog:ConfirmDialog}, Path=Title}"
                                           VerticalAlignment="Center" 
                                           FontSize="16"/>
                            </StackPanel>
                        </Grid>
                        <Border Grid.Row="1"
                                BorderThickness="0,1"
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                Padding="20,10">
                            <TextBlock Grid.Row="1"
                                       VerticalAlignment="Top"
                                       HorizontalAlignment="Left"
                                       TextWrapping="Wrap"
                                       FontSize="14"
                                       Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=EMCDialog:ConfirmDialog}, Path=Text}"/>
                        </Border>
                        <EMCButton:EMCButton Grid.Row="2"
                                             Command="{x:Static EMCDialog:DialogCommands.ConfirmCommand}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Right"
                                             Margin="0,0,10,0"/>
                    </Grid>
                </Border>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="BusyTextBlockStyle">
        <TextBlock Style="{StaticResource FIcon}"
                   Text="{StaticResource fa-spinner}"
                   RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>
                <RotateTransform x:Name="angle" Angle="0"/>
            </TextBlock.RenderTransform>
            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Angle"
                                             Storyboard.TargetName="angle"
                                             To="360" 
                                             RepeatBehavior="Forever" 
                                             Duration="0:0:2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </TextBlock.Triggers>
        </TextBlock>
    </DataTemplate>
    <Style x:Key="EMCBusyIndicatorStyle" TargetType="EMCBusyIndicator:EMCBusyIndicator" BasedOn="{StaticResource BaseDialogStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox Height="100"
                         Width="100">
                    <ContentControl ContentTemplate="{StaticResource BusyTextBlockStyle}"/>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ToolTipTemplate" TargetType="EMCToolTip:EMCToolTip">
        <Border Effect="{StaticResource DefaultDropShadowEffect}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition MinHeight="25" Height="{Binding ElementName=PART_Content, Path=ActualHeight}"/>
                    <RowDefinition Height="10"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition MinWidth="25" Width="{Binding ElementName=PART_Content, Path=ActualWidth}"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <Grid Panel.ZIndex="1"
                      Grid.Row="0"
                      x:Name="PART_Top_Angle"
                      Visibility="Collapsed"
                      Grid.Column="1">
                    <Path Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="1"
                          Stretch="UniformToFill"
                          Fill="{TemplateBinding Background}"
                          Data="M50,10 60,0 70,10Z">
                    </Path>
                    <Grid.RenderTransform>
                        <TranslateTransform Y="1"/>
                    </Grid.RenderTransform>
                </Grid>
                <Grid Panel.ZIndex="1"
                      Grid.Row="2"
                      x:Name="PART_Bottom_Angle"
                      Visibility="Collapsed"
                      Grid.Column="1">
                    <Path Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="1"
                          Stretch="UniformToFill"
                          VerticalAlignment="Bottom"
                          Fill="{TemplateBinding Background}"
                          Data="M50,0 60,10 70,0Z">
                    </Path>
                    <Grid.RenderTransform>
                        <TranslateTransform Y="-1.5"/>
                    </Grid.RenderTransform>
                </Grid>
                <Grid Panel.ZIndex="1"
                      Grid.Row="1"
                      x:Name="PART_Left_Angle"
                      Visibility="Collapsed"
                      Grid.Column="0">
                    <Path Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="1"
                          Stretch="UniformToFill"
                          Fill="{TemplateBinding Background}"
                          Data="M10,25 0,35 10,45Z">
                    </Path>
                    <Grid.RenderTransform>
                        <TranslateTransform X="1"/>
                    </Grid.RenderTransform>
                </Grid>
                <Grid Panel.ZIndex="1"
                      Grid.Row="1"
                      x:Name="PART_Right_Angle"
                      Visibility="Collapsed"
                      Grid.Column="2">
                    <Path Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="1"
                          Stretch="UniformToFill"
                          Fill="{TemplateBinding Background}"
                          HorizontalAlignment="Right"
                          Data="M110,25 120,35 110,45Z">
                    </Path>
                    <Grid.RenderTransform>
                        <TranslateTransform X="-1.5"/>
                    </Grid.RenderTransform>
                </Grid>
                <Path Stroke="{TemplateBinding BorderBrush}"
                      Stretch="Fill"
                      Fill="{TemplateBinding Background}"
                      StrokeThickness="1"
                      Grid.Row="1"
                      Grid.Column="1"
                      Data="M50,0 5,0 A5,5 0,0,0 0,5 L0,55 A5,5 0,0,0 5,60 L115,60 A5,5 0,0,0 120,55 L120,5 A5,5 0,0,0 115,0Z">
                </Path>
                <Border Grid.Row="1"
                        Grid.Column="1"
                        Padding="5"
                        x:Name="PART_Content"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Placement" Value="Bottom">
                <Setter TargetName="PART_Top_Angle" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Bottom_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Left_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Right_Angle" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Placement" Value="Top">
                <Setter TargetName="PART_Top_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Bottom_Angle" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Left_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Right_Angle" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Placement" Value="Left">
                <Setter TargetName="PART_Top_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Bottom_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Left_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Right_Angle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Placement" Value="Right">
                <Setter TargetName="PART_Top_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Bottom_Angle" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_Left_Angle" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Right_Angle" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="EMCToolTip:EMCToolTip">
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="Background" Value="{StaticResource ToolTipBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush}"/>
        <Setter Property="Template" Value="{StaticResource ToolTipTemplate}"/>
    </Style>

    <Style x:Key="CloseBtnStyle"
               TargetType="Button">
        <Setter Property="Background"
                    Value="Transparent" />
        <Setter Property="Height"
                    Value="20" />
        <Setter Property="BorderThickness"
                    Value="0" />
        <Setter Property="Width"
                    Value="20" />
        <Setter Property="Margin"
                    Value="0,0,5,0" />
        <Setter Property="HorizontalAlignment"
                    Value="Right" />
        <Setter Property="Cursor"
                    Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                x:Name="border">
                        <Path Stroke="White"
                                  x:Name="Close_path"
                                  StrokeThickness="1"
                                  Data="M5,5 15,15 M5,15 15,5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                     Value="True">
                            <Setter TargetName="border"
                                        Property="Background"
                                        Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>