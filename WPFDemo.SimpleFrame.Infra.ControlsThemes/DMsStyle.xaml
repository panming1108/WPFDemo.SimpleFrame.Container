<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFDemo.SimpleFrame.Infra.ControlsThemes"
                    xmlns:EMCListBox="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.DMs.ListBox;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCDataGrid="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.DMs.DataGrid;assembly=WPFDemo.SimpleFrame.Infra.CustomControls"
                    xmlns:EMCDataPager="clr-namespace:WPFDemo.SimpleFrame.Infra.CustomControls.DMs.DataPager;assembly=WPFDemo.SimpleFrame.Infra.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFDemo.SimpleFrame.Infra.ControlsThemes;component/ScrollViewerStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--#region DataPager -->
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Path Grid.Column="1"                      
                      Stroke="#9FABBC"
                      StrokeThickness="2"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Stretch="Uniform"
                      Margin="5,0"
                      Data="{StaticResource ExpanderClose}"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform x:Name="PART_Icon" Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter Grid.Column="0"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource IsCheckedBrush}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Icon"
                                             Storyboard.TargetProperty="Angle"
                                             To="180"
                                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Icon"
                                             Storyboard.TargetProperty="Angle"
                                             To="0"
                                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource MouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#E4E6E5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#767779"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxToggleButtonTemplate}"/>
    </Style>
    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="#1C9DE7" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="#1C9DE7" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}" x:Key="DefaultComboBox">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Foreground" Value="#9FABBC" />
        <Setter Property="Background" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#DBE0E3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="3"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Grid>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" HorizontalAlignment="Right"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsEnabled="{TemplateBinding IsEnabled}" Style="{StaticResource ComboBoxToggleButtonStyle}"
                                         BorderThickness="0" VerticalAlignment="Center" Foreground="#9FABBC"
                                         Padding="2" Width="{TemplateBinding Width}"/>
                            <!--主内容区域-->
                            <Grid x:Name="ContentSite" Margin="2 0 0 0" >
                                <ContentPresenter x:Name="PART_SelectedItem" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="10,0,2,0" 
                                                  IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Grid>
                        <!--弹出下拉控件-->
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch"
                                        Height="Auto" BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="White">
                                </Border>
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--编辑模式-->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="#FF569DE5"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="#FF569DE5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.6"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Pager_Button_Style" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{StaticResource DisabledBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource CommonForeground}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger>
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{x:Static EMCDataPager:DataPagerConverter.SelectedBackgroundConverter}">
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Content"/>
                                    <Binding RelativeSource="{RelativeSource AncestorType=EMCDataPager:EMCDataPager}" Path="PageNo"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <DataTrigger.Value>true</DataTrigger.Value>
                            <Setter Property="Background" Value="{StaticResource IsCheckedBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource IsCheckedBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#D5D6DB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataPagerStyle" TargetType="EMCDataPager:EMCDataPager">
        <Setter Property="PageButtonStyle" Value="{StaticResource Pager_Button_Style}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCDataPager:EMCDataPager">
                    <Border x:Name="PART_ROOT"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <WrapPanel HorizontalAlignment="Right">
                            <!--共 400 条记录 第 1 / 80 页-->
                            <TextBlock VerticalAlignment="Center"
                                       FontSize="14"
                                       Foreground="#9FABBC"
                                       HorizontalAlignment="Right"
                                       Margin="10,0">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}共 {0} 条记录 第 {1} / {2} 页">
                                        <Binding Path="ItemCount" 
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="PageNo" 
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="PageCount" 
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{TemplateBinding PageButtonStyle}"
                                            Command="{x:Static EMCDataPager:DataPagerCommands.MoveToPreviousPage}">
                                        <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, AncestorLevel=1}}"
                                              StrokeThickness="2"
                                              Data="{StaticResource CalendarPrevPagePathGeometry}"/>
                                    </Button>
                                    <Button Style="{TemplateBinding PageButtonStyle}"
                                            Command="{x:Static EMCDataPager:DataPagerCommands.MoveToFirstPage}"
                                            Content="1"/>
                                    <Border Margin="2" 
                                            Width="32" 
                                            Height="32"
                                            Visibility="{TemplateBinding FirstEllipsisVisibility}">
                                        <TextBlock Text="···"                                               
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Foreground="{StaticResource CommonForeground}"
                                                   FontSize="20"/>
                                    </Border>
                                </StackPanel>
                                <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisplayButtons}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal">
                                            </StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Style="{Binding RelativeSource={RelativeSource AncestorType=EMCDataPager:EMCDataPager}, Path=PageButtonStyle}"
                                                    Content="{Binding}"
                                                    x:Name="btn"
                                                    Command="{x:Static EMCDataPager:DataPagerCommands.MoveToPage}" 
                                                    CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <StackPanel Orientation="Horizontal">
                                    <Border Margin="2" 
                                            Width="32" 
                                            Height="32"
                                            Visibility="{TemplateBinding LastEllipsisVisibility}">
                                        <TextBlock Text="···"                                             
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Foreground="{StaticResource CommonForeground}"
                                                   FontSize="20"/>
                                    </Border>
                                    <Button Style="{TemplateBinding PageButtonStyle}"
                                            Visibility="{Binding Path=MoveToLastPageVisibility,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Command="{x:Static EMCDataPager:DataPagerCommands.MoveToLastPage}"
                                            Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PageCount}"/>
                                    <Button Style="{TemplateBinding PageButtonStyle}"
                                            Command="{x:Static EMCDataPager:DataPagerCommands.MoveToNextPage}">
                                        <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, AncestorLevel=1}}"
                                              StrokeThickness="2"
                                              Data="{StaticResource CalendarNextPagePathGeometry}"/>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Border BorderThickness="1" 
                                    CornerRadius="5" 
                                    BorderBrush="#E3E6EA"
                                    Margin="10,0">
                                <ComboBox MinWidth="90" 
                                          BorderBrush="Transparent" 
                                          BorderThickness="0"
                                          Style="{StaticResource DefaultComboBox}"
                                          ItemsSource="{TemplateBinding PageSizeSource}" 
                                          SelectedItem="{Binding Path=PageSize, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" 
                                                        VerticalAlignment="Center">
                                                <TextBlock Text="{Binding}" />
                                                <TextBlock Text="条/页" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Border>

                            <StackPanel Orientation="Horizontal" 
                                        Margin="0,0,10,0">
                                <TextBlock VerticalAlignment="Center" Text="跳至" FontSize="14" Foreground="#9FABBC" />

                                <Border BorderThickness="1" 
                                        Margin="10,0" 
                                        CornerRadius="5" 
                                        BorderBrush="#E3E6EA">
                                    <TextBox x:Name="Part_TextBox" 
                                             BorderBrush="Transparent" 
                                             VerticalAlignment="Center"
                                             FontSize="14"
                                             Foreground="#9FABBC"
                                             BorderThickness="0" 
                                             Width="48" />
                                </Border>

                                <TextBlock VerticalAlignment="Center" Text="页"  FontSize="14" Foreground="#9FABBC" />
                            </StackPanel>
                        </WrapPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="EMCDataPager:EMCDataPager" BasedOn="{StaticResource DataPagerStyle}"/>
    <!--#endregion-->

    <!--#region ListBox -->
    <Style x:Key="DefaultListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"                                          
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ItemSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ItemMouseOverForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EMCListItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource EMCListBoxForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource EMCListBoxItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultEMCListBoxStyle" TargetType="{x:Type EMCListBox:EMCListBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ItemsContentBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListBoxItem}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type EMCListBox:EMCListBox}">
                    <Border Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReadEMCListBoxStyle" TargetType="EMCListBox:EMCListBox" BasedOn="{StaticResource DefaultEMCListBoxStyle}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource EMCListItem}"/>
    </Style>
    <Style TargetType="EMCListBox:EMCListBox" BasedOn="{StaticResource DefaultEMCListBoxStyle}"/>
    <!--#endregion-->

    <!--#region DataGrid -->
    <!--#region Default-->
    <!--调整列头宽度样式-->
    <Style x:Key="DefaultColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="{StaticResource BaseDataGridHeaderBackground}" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" Margin="0 0 0 2">
                        <Rectangle HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--行头调整高度样式 -->
    <Style x:Key="DefaultRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--行头部样式-->
    <Style x:Key="DefaultDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalContentAlignment="Top"
                               VerticalAlignment="Top" Background="Transparent" Style="{StaticResource DefaultRowHeaderGripperStyle}" />
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalContentAlignment="Bottom"
                               VerticalAlignment="Bottom" Style="{StaticResource DefaultRowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region BasicDataGrid-->
    <!--列头header样式-->
    <Style x:Key="BasicDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Foreground" Value="{StaticResource BaseDataGridHeaderForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="20,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseDataGridHeaderBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource BaseDataGridHeaderBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <ContentPresenter x:Name="HeaderContent"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBlock x:Name="SortArrow" Text="﹀" Grid.Column="1" Width="20"
                                       Visibility="Collapsed" FontSize="16" Margin="1,1,3,1" />

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                               Style="{StaticResource DefaultColumnHeaderGripperStyle}" />

                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Background="Transparent"
                               Style="{StaticResource DefaultColumnHeaderGripperStyle}" Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示排序标示-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                                <Condition Property="CanUserSort" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <!--可排序列鼠标样式-->
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--升序-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--降序-->
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="Text" Value="&#xe625;"/>
                        </Trigger>
                        <!--第一列左边不显示分割线-->
                        <Trigger Property="DisplayIndex" Value="2">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--行样式-->
    <Style x:Key="BasicDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{StaticResource BaseDataGridRowForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BaseDataGridRowMouseOverBackground}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{StaticResource BaseDataGridRowForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--单元格样式-->
    <Style x:Key="BasicDataGridCell"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="19,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">

                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--表格DataGrid样式-->
    <Style x:Key="BasicDataGrid" TargetType="{x:Type EMCDataGrid:EMCDataGrid}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Heavy"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDataGridRowForeground}"/>
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#EEF3F7" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#E9E9E9" />
        <Setter Property="VerticalGridLinesBrush" Value="#EBEBEB" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource BasicDataGridColumnHeader}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource BasicDataGridCell}" />
        <Setter Property="RowStyle" Value="{StaticResource BasicDataGridRow}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="AlternationCount" Value="2"></Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <!--列头移动列时候分割线样式-->
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="#EBEBEB" />
                    <Setter Property="Width" Value="2.5" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--DataGrid控件模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type EMCDataGrid:EMCDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" x:Name="border"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="col_rowheader" Width="1" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <!--表格头部-->
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Grid.ColumnSpan="2"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <!--主数据区-->
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" />
                                        </Grid>
                                        <!--垂直滑动条-->
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical" Grid.Row="0" Grid.RowSpan="3" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <!--横向滑动条-->
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                                                       Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.6" TargetName="border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region DataTableGrid-->
    <!--列头header样式-->
    <Style x:Key="DataTableGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource BasicDataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource BaseDataGridHeaderForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseDataGridHeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="White" />
    </Style>
    <!--行样式-->
    <Style x:Key="DataTableGridRow" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource BasicDataGridRow}">
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#F6F5FA" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BaseDataGridRowMouseOverBackground}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{StaticResource BaseDataGridRowForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--表格DataGrid样式-->
    <Style x:Key="DataTableGrid" TargetType="{x:Type EMCDataGrid:EMCDataGrid}" BasedOn="{StaticResource BasicDataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataTableGridColumnHeader}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource BasicDataGridCell}" />
        <Setter Property="RowStyle" Value="{StaticResource DataTableGridRow}" />
    </Style>
    <!--#endregion-->
    <Style TargetType="EMCDataGrid:EMCDataGrid" BasedOn="{StaticResource BasicDataGrid}"/>

    <!--#region NewDataGrid-->
    <Style TargetType="EMCDataGrid:IconButton">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="EMCDataGrid:IconButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Stretch="Uniform"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{TemplateBinding Source}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CopyButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BtnConfirmBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="复制"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource BtnConfirmMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BtnConfirmIsEnabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource BtnConfirmIsEnabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CommonCellTemplate" TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="19,0,0,0" />
        <Setter Property="EMCDataGrid:DataGridAttachProperty.IconPosition" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconPosition)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel LastChildFill="True">
                            <EMCDataGrid:IconsItemsControl ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconsSource)}"
                                                           VerticalAlignment="Center"
                                                           IconSourceMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconSourceMemberPath)}"
                                                           IconToolTipMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconToolTipMemberPath)}"
                                                           IconCommandMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Column.(EMCDataGrid:DataGridAttachProperty.IconCommandMemberPath)}"
                                                           DockPanel.Dock="Left"
                                                           x:Name="PART_IconsItemsControl">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </EMCDataGrid:IconsItemsControl>
                            <ContentPresenter DockPanel.Dock="Right"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              x:Name="PART_Content">

                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EMCDataGrid:DataGridAttachProperty.IconPosition" Value="Behind">
                            <Setter TargetName="PART_IconsItemsControl" Property="DockPanel.Dock" Value="Right"/>
                            <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Left"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CopyCellTemplate" TargetType="DataGridCell" BasedOn="{StaticResource CommonCellTemplate}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <DockPanel LastChildFill="True">
                                <EMCDataGrid:IconsItemsControl ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconsSource)}"
                                                           VerticalAlignment="Center"
                                                           IconSourceMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconSourceMemberPath)}"
                                                           IconToolTipMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Column.(EMCDataGrid:DataGridAttachProperty.IconToolTipMemberPath)}"
                                                           IconCommandMemberPath="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Column.(EMCDataGrid:DataGridAttachProperty.IconCommandMemberPath)}"
                                                           DockPanel.Dock="Left"
                                                           x:Name="PART_IconsItemsControl">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </EMCDataGrid:IconsItemsControl>
                                <ContentPresenter DockPanel.Dock="Right"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              x:Name="PART_Content">

                                </ContentPresenter>
                            </DockPanel>
                            <Button Grid.Column="1"
                                    x:Name="PART_CopyBtn"
                                    Style="{Binding RelativeSource={RelativeSource AncestorType=EMCDataGrid:NewDataGrid}, Path=CopyButtonStyle}"
                                    Visibility="Hidden"
                                    Margin="10,0"
                                    EMCDataGrid:DataGridAttachProperty.IsCopyEnabled="True"
                                    Command="{x:Static EMCDataGrid:DataGridAttachProperty.CopyCommand}"
                                    CommandParameter="{Binding ElementName=PART_Content, Path=Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EMCDataGrid:DataGridAttachProperty.IconPosition" Value="Behind">
                            <Setter TargetName="PART_IconsItemsControl" Property="DockPanel.Dock" Value="Right"/>
                            <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Left"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_CopyBtn" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ScrollViewerDataGridTemplate" TargetType="EMCDataGrid:NewDataGrid">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" x:Name="border"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                <ScrollViewer.Template>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="col_rowheader" Width="1" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--表格头部-->
                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Grid.ColumnSpan="2"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            <!--主数据区-->
                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" />
                            </Grid>
                            <!--垂直滑动条-->
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical" Grid.Row="0" Grid.RowSpan="3" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                            <!--横向滑动条-->
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                                                       Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Grid>
                    </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6" TargetName="border" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DataPagerDataGridTemplate" TargetType="EMCDataGrid:NewDataGrid">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                x:Name="border">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                    <ScrollViewer.Template>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="col_rowheader" Width="1" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <!--表格头部-->
                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Grid.ColumnSpan="2"
                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                <!--主数据区-->
                                <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" />
                                </Grid>
                                <!--垂直滑动条-->
                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical" Grid.Row="0" Grid.RowSpan="3" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                                <!--横向滑动条-->
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                                                           Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           ViewportSize="{TemplateBinding ViewportWidth}" />
                            </Grid>
                        </ControlTemplate>
                    </ScrollViewer.Template>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ScrollViewer>
                <EMCDataPager:EMCDataPager Grid.Row="1" 
                                           FontWeight="Normal"
                                           x:Name="PART_DataPager"
                                           PageNo="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PageNo,Mode=TwoWay}"
                                           PageSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PageSize,Mode=TwoWay}"
                                           PageSizeComboBoxVisibity="{TemplateBinding PageSizeComboBoxVisibity}"
                                           PageButtonStyle="{TemplateBinding PageButtonStyle}"
                                           PageSizeSource="{TemplateBinding PageSizeSource}"
                                           ItemCount="{TemplateBinding Total}"
                                           NumericButtonCount="{TemplateBinding NumericButtonCount}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsUseDataPager" Value="False">
                <Setter TargetName="PART_DataPager" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6" TargetName="border" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="HaveDataPagerDataGridStyle" TargetType="EMCDataGrid:NewDataGrid">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Heavy"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDataGridRowForeground}"/>
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#EEF3F7" />
        <Setter Property="BorderThickness" Value="0" />
        <!--<Setter Property="GridLinesVisibility" Value="Horizontal"/>-->
        <Setter Property="HorizontalGridLinesBrush" Value="#E9E9E9" />
        <Setter Property="VerticalGridLinesBrush" Value="#EBEBEB" />
        <!--<Setter Property="ColumnHeaderStyle" Value="{StaticResource BasicDataGridColumnHeader}" />-->
        <!--<Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeader}" />-->
        <Setter Property="CellStyle" Value="{StaticResource CommonCellTemplate}" />
        <Setter Property="RowStyle" Value="{StaticResource BasicDataGridRow}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False"/>
        <!--<Setter Property="CanUserDeleteRows" Value="False"/>-->
        <!--<Setter Property="CanUserReorderColumns" Value="False"/>-->
        <!--<Setter Property="CanUserResizeColumns" Value="False"/>-->
        <!--<Setter Property="CanUserResizeRows" Value="False"/>-->
        <!--<Setter Property="CanUserSortColumns" Value="False"/>-->
        <Setter Property="IsReadOnly" Value="True" />
        <!--<Setter Property="SelectionMode" Value="Single" />-->
        <!--<Setter Property="SelectionUnit" Value="FullRow" />-->
        <!--<Setter Property="AlternationCount" Value="2"></Setter>-->
        <Setter Property="PageButtonStyle" Value="{StaticResource Pager_Button_Style}"/>
        <Setter Property="CopyButtonStyle" Value="{StaticResource CopyButtonStyle}"/>
        <!--列头移动列时候分割线样式-->
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="#EBEBEB" />
                    <Setter Property="Width" Value="2.5" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--DataGrid控件模板-->
        <Setter Property="Template" Value="{StaticResource ScrollViewerDataGridTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="IsUseDataPager" Value="False">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="Template" Value="{StaticResource ScrollViewerDataGridTemplate}"/>
            </Trigger>
            <Trigger Property="IsUseDataPager" Value="True">
                <Setter Property="Template" Value="{StaticResource DataPagerDataGridTemplate}"/>
            </Trigger>
            <Trigger Property="IsOpenCopyButton" Value="True">
                <Setter Property="CellStyle" Value="{StaticResource CopyCellTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    
    <!--#endregion-->
</ResourceDictionary>